{"ast":null,"code":"import React from'react';// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NavTabs(_ref){var currentPage=_ref.currentPage,handlePageChange=_ref.handlePageChange;return/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#dashboard\",onClick:function onClick(){return handlePageChange('Dashboard');}// Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Dashboard'?'nav-link active':'nav-link',children:\"Dashboard\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#portfolio\",onClick:function onClick(){return handlePageChange('Portfolio');}// Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Portfolio'?'nav-link active':'nav-link',children:\"Portfolio\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#resume\",onClick:function onClick(){return handlePageChange('Resume');}// This is a conditional (ternary) operator that checks to see if the current page is \"Resume\"\n// If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n,className:currentPage==='Resume'?'nav-link active':'nav-link',children:\"Resume\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#contact\",onClick:function onClick(){return handlePageChange('Contact');}// Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Contact'?'nav-link active':'nav-link',children:\"Contact\"})})]});}export default NavTabs;","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Homework/Scratch_Work/pracPro/src/components/NavTabs.js"],"names":["React","NavTabs","currentPage","handlePageChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;wFACA,QAASC,CAAAA,OAAT,MAAoD,IAAjCC,CAAAA,WAAiC,MAAjCA,WAAiC,CAApBC,gBAAoB,MAApBA,gBAAoB,CAClD,mBACE,YAAI,SAAS,CAAC,cAAd,wBACE,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,YADP,CAEE,OAAO,CAAE,yBAAMA,CAAAA,gBAAgB,CAAC,WAAD,CAAtB,EACT;AAHF,CAIE,SAAS,CAAED,WAAW,GAAK,WAAhB,CAA8B,iBAA9B,CAAkD,UAJ/D,uBADF,EADF,cAWE,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,YADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,WAAD,CAAtB,EACT;AAHF,CAIE,SAAS,CAAED,WAAW,GAAK,WAAhB,CAA8B,iBAA9B,CAAkD,UAJ/D,uBADF,EAXF,cAqBE,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,QAAD,CAAtB,EACT;AACA;AAJF,CAKE,SAAS,CAAED,WAAW,GAAK,QAAhB,CAA2B,iBAA3B,CAA+C,UAL5D,oBADF,EArBF,cAgCE,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,SAAD,CAAtB,EACT;AAHF,CAIE,SAAS,CAAED,WAAW,GAAK,SAAhB,CAA4B,iBAA5B,CAAgD,UAJ7D,qBADF,EAhCF,GADF,CA6CD,CAED,cAAeD,CAAAA,OAAf","sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#dashboard\"\n          onClick={() => handlePageChange('Dashboard')}\n          // Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Dashboard' ? 'nav-link active' : 'nav-link'}\n        >\n          Dashboard\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => handlePageChange('Portfolio')}\n          // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#resume\"\n          onClick={() => handlePageChange('Resume')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Resume\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\n        >\n          Resume\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n"]},"metadata":{},"sourceType":"module"}