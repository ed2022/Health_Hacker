{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\Project3\\\\Health_Hacker\\\\client\\\\src\\\\components\\\\pages\\\\Community.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Community() {\n  _s();\n\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'message') {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault(); // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Respond to Gena and her Journy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        className: \"form-input w-100\",\n        name: \"message\",\n        onChange: handleInputChange,\n        type: \"message\",\n        placeholder: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block py-3\",\n        type: \"button\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Community, \"8bzU4teUp2GFrWZPk+8izhlkEcA=\");\n\n_c = Community;\n\nvar _c;\n\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"sources":["C:/Users/andre/OneDrive/Desktop/Project3/Health_Hacker/client/src/components/pages/Community.js"],"names":["React","useState","Community","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaD,CAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,IAAzB;AACA,UAAMC,UAAU,GAAGH,MAAM,CAACI,KAA1B,CAJ+B,CAM/B;;AACA,QAAIH,SAAS,KAAK,SAAlB,EAA6B;AAC3BN,MAAAA,UAAU,CAACQ,UAAD,CAAV;AACD;AACF,GAVD;;AAYA,QAAME,gBAAgB,GAAIN,CAAD,IAAO;AAC9B;AACAA,IAAAA,CAAC,CAACO,cAAF,GAF8B,CAG9B;;AACAX,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,+DAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAED,OADT;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,QAAQ,EAAEI,iBAJZ;AAKE,QAAA,IAAI,EAAC,SALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAiE,QAAA,OAAO,EAAEO,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGT,YAAY,iBACX;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9CuBH,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nexport default function Community() {\r\n  // Create state variables for the fields in the form\r\n  // We are also setting their initial values to an empty string\r\n  const [message, setMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { target } = e;\r\n    const inputType = target.name;\r\n    const inputValue = target.value;\r\n\r\n    // Based on the input type, we set the state of either email, username, and password\r\n    if (inputType === 'message') {\r\n      setMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    // Preventing the default behavior of the form submit (which is to refresh the page)\r\n    e.preventDefault();\r\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Respond to Gena and her Journy</p>\r\n      <form className=\"flex-row justify-center justify-space-between-md align-center\">\r\n        <input\r\n          value={message}\r\n          className=\"form-input w-100\"\r\n          name=\"message\"\r\n          onChange={handleInputChange}\r\n          type=\"message\"\r\n          placeholder=\"message\"\r\n        />\r\n        <button className=\"btn btn-primary btn-block py-3\" type=\"button\" onClick={handleFormSubmit}>Submit</button>\r\n      </form>\r\n      {errorMessage && (\r\n        <div>\r\n          <p className=\"error-text\">{errorMessage}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}