{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eldan\\\\Assignments\\\\Homework\\\\Scratch_Work\\\\pracPro\\\\src\\\\components\\\\MainDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Dashboard from './pages/Dashboard';\nimport Portfolio from './pages/Portfolio';\nimport Resume from './pages/Resume';\nimport Contact from './pages/Contact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState('Dashboard'); // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n\n  const renderPage = () => {\n    if (currentPage === 'Portfolio') {\n      return /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (currentPage === 'Dashboard') {\n      return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (currentPage === 'Resume') {\n      return /*#__PURE__*/_jsxDEV(Resume, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  };\n\n  const handlePageChange = page => setCurrentPage(page);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavTabs, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PortfolioContainer, \"rQSDijLzF4LgCrx74YlLBXYe7SM=\");\n\n_c = PortfolioContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Homework/Scratch_Work/pracPro/src/components/MainDisplay.js"],"names":["React","useState","NavTabs","Dashboard","Portfolio","Resume","Contact","PortfolioContainer","currentPage","setCurrentPage","renderPage","handlePageChange","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,WAAD,CAA9C,CAD2C,CAG3C;;AACA,QAAMS,UAAU,GAAG,MAAM;AACvB,QAAIF,WAAW,KAAK,WAApB,EAAiC;AAC/B,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIA,WAAW,KAAK,WAApB,EAAiC;AAC/B,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIA,WAAW,KAAK,QAApB,EAA8B;AAC5B,0BAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAXD;;AAaA,QAAMG,gBAAgB,GAAIC,IAAD,IAAUH,cAAc,CAACG,IAAD,CAAjD;;AAEA,sBACE;AAAA,4BAEE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEJ,WAAtB;AAAmC,MAAA,gBAAgB,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGD,UAAU,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BuBH,kB;;KAAAA,kB","sourcesContent":["import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Dashboard from './pages/Dashboard';\nimport Portfolio from './pages/Portfolio';\nimport Resume from './pages/Resume';\nimport Contact from './pages/Contact';\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('Dashboard');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Portfolio') {\n      return <Portfolio />;\n    }\n    if (currentPage === 'Dashboard') {\n      return <Dashboard />;\n    }\n    if (currentPage === 'Resume') {\n      return <Resume />;\n    }\n    return <Contact />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}