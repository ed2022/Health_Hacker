{"ast":null,"code":"import React from'react';// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NavTabs(_ref){var currentPage=_ref.currentPage,handlePageChange=_ref.handlePageChange;return/*#__PURE__*/_jsx(\"div\",{className:\"navTabs\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item secondTabs\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#journal\",onClick:function onClick(){return handlePageChange('Journal');}// This is a conditional (ternary) operator that checks to see if the current page is \"Journal\"\n// If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n,className:currentPage==='Journal'?'nav-link active':'nav-link',children:\"Journal\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item secondTabs\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#plans\",onClick:function onClick(){return handlePageChange('Plans');}// Check to see if the currentPage is `Plans`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Plans'?'nav-link active':'nav-link',children:\"Plans\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item secondTabs\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#community\",onClick:function onClick(){return handlePageChange('Community');}// Check to see if the currentPage is `Community`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Community'?'nav-link active':'nav-link',children:\"Community\"})})]})});}export default NavTabs;","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Projects/Health_Hacker/client/src/components/NavTabs.js"],"names":["React","NavTabs","currentPage","handlePageChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;wFACA,QAASC,CAAAA,OAAT,MAAoD,IAAjCC,CAAAA,WAAiC,MAAjCA,WAAiC,CAApBC,gBAAoB,MAApBA,gBAAoB,CAClD,mBACE,YAAK,SAAS,CAAC,SAAf,uBACA,YAAI,SAAS,CAAC,cAAd,wBACE,WAAI,SAAS,CAAC,qBAAd,uBACE,UACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAE,yBAAMA,CAAAA,gBAAgB,CAAC,SAAD,CAAtB,EACT;AACA;AAJF,CAKE,SAAS,CAAED,WAAW,GAAK,SAAhB,CAA4B,iBAA5B,CAAgD,UAL7D,qBADF,EADF,cAYE,WAAI,SAAS,CAAC,qBAAd,uBACE,UACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,OAAD,CAAtB,EACT;AAHF,CAIE,SAAS,CAAED,WAAW,GAAK,OAAhB,CAA0B,iBAA1B,CAA8C,UAJ3D,mBADF,EAZF,cAsBE,WAAI,SAAS,CAAC,qBAAd,uBACE,UACE,IAAI,CAAC,YADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,WAAD,CAAtB,EACT;AAHF,CAIE,SAAS,CAAED,WAAW,GAAK,WAAhB,CAA8B,iBAA9B,CAAkD,UAJ/D,uBADF,EAtBF,GADA,EADF,CAqCD,CAED,cAAeD,CAAAA,OAAf","sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <div className='navTabs'>\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item secondTabs\">\n        <a\n          href=\"#journal\"\n          onClick={() => handlePageChange('Journal')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Journal\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Journal' ? 'nav-link active' : 'nav-link'}\n        >\n          Journal\n        </a>\n      </li>\n      <li className=\"nav-item secondTabs\">\n        <a\n          href=\"#plans\"\n          onClick={() => handlePageChange('Plans')}\n          // Check to see if the currentPage is `Plans`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Plans' ? 'nav-link active' : 'nav-link'}\n        >\n          Plans\n        </a>\n      </li>\n      <li className=\"nav-item secondTabs\">\n        <a\n          href=\"#community\"\n          onClick={() => handlePageChange('Community')}\n          // Check to see if the currentPage is `Community`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Community' ? 'nav-link active' : 'nav-link'}\n        >\n          Community\n        </a>\n      </li>\n    </ul>\n    </div>\n  );\n}\n\nexport default NavTabs;\n"]},"metadata":{},"sourceType":"module"}