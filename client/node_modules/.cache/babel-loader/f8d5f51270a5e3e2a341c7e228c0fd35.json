{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eldan\\\\Assignments\\\\Projects\\\\Project_3\\\\OG\\\\client\\\\src\\\\components\\\\NavTabs.js\";\nimport React from 'react'; // Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navTabs\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav nav-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#dashboard\",\n          onClick: () => handlePageChange('Dashboard') // Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Dashboard' ? 'nav-link active' : 'nav-link',\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#journal\",\n          onClick: () => handlePageChange('Journal') // This is a conditional (ternary) operator that checks to see if the current page is \"Journal\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          ,\n          className: currentPage === 'Journal' ? 'nav-link active' : 'nav-link',\n          children: \"Journal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#plans\",\n          onClick: () => handlePageChange('Plans') // Check to see if the currentPage is `Plans`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Plans' ? 'nav-link active' : 'nav-link',\n          children: \"Plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#community\",\n          onClick: () => handlePageChange('Community') // Check to see if the currentPage is `Community`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Community' ? 'nav-link active' : 'nav-link',\n          children: \"Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavTabs;\nexport default NavTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Projects/Project_3/OG/client/src/components/NavTabs.js"],"names":["React","NavTabs","currentPage","handlePageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AACA,SAASC,OAAT,OAAoD;AAAA,MAAnC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAmC;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACA;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACC;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,WAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,WAAhB,GAA8B,iBAA9B,GAAkD,UAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADH,eAWE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CAFjC,CAGE;AACA;AAJF;AAKE,UAAA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAL7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAsBE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,OAAhB,GAA0B,iBAA1B,GAA8C,UAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF,eAgCE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CAFjC,CAGE;AAHF;AAIE,UAAA,SAAS,EAAED,WAAW,KAAK,WAAhB,GAA8B,iBAA9B,GAAkD,UAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;KAhDQD,O;AAkDT,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <div className='navTabs'>\n    <ul className=\"nav nav-tabs\">\n       <li className=\"nav-item\">\n        <a\n          href=\"#dashboard\"\n          onClick={() => handlePageChange('Dashboard')}\n          // Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Dashboard' ? 'nav-link active' : 'nav-link'}\n        >\n          Dashboard\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#journal\"\n          onClick={() => handlePageChange('Journal')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Journal\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Journal' ? 'nav-link active' : 'nav-link'}\n        >\n          Journal\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#plans\"\n          onClick={() => handlePageChange('Plans')}\n          // Check to see if the currentPage is `Plans`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Plans' ? 'nav-link active' : 'nav-link'}\n        >\n          Plans\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#community\"\n          onClick={() => handlePageChange('Community')}\n          // Check to see if the currentPage is `Community`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Community' ? 'nav-link active' : 'nav-link'}\n        >\n          Community\n        </a>\n      </li>\n    </ul>\n    </div>\n  );\n}\n\nexport default NavTabs;\n"]},"metadata":{},"sourceType":"module"}