{"ast":null,"code":"import _slicedToArray from\"C:/Users/eldan/Assignments/Projects/Project_3/OG/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import NavTabs from'./NavTabs';import Dashboard from'./pages/Dashboard';import Plans from'./pages/Plans';import Community from'./pages/Community';import Journal from'./pages/Journal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MainDisplay(){var _useState=useState('Dashboard'),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];// This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\nvar renderPage=function renderPage(){if(currentPage==='Dashboard'){return/*#__PURE__*/_jsx(Dashboard,{});}if(currentPage==='Journal'){return/*#__PURE__*/_jsx(Journal,{});}if(currentPage==='Plans'){return/*#__PURE__*/_jsx(Plans,{});}return/*#__PURE__*/_jsx(Community,{});};var handlePageChange=function handlePageChange(page){return setCurrentPage(page);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavTabs,{currentPage:currentPage,handlePageChange:handlePageChange}),renderPage()]});}","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Projects/Project_3/OG/client/src/components/MainDisplay.js"],"names":["React","useState","NavTabs","Dashboard","Plans","Community","Journal","MainDisplay","currentPage","setCurrentPage","renderPage","handlePageChange","page"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,cAAsCN,QAAQ,CAAC,WAAD,CAA9C,wCAAOO,WAAP,eAAoBC,cAApB,eAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIF,WAAW,GAAK,WAApB,CAAiC,CAC/B,mBAAO,KAAC,SAAD,IAAP,CACD,CACD,GAAIA,WAAW,GAAK,SAApB,CAA+B,CAC7B,mBAAO,KAAC,OAAD,IAAP,CACD,CACD,GAAIA,WAAW,GAAK,OAApB,CAA6B,CAC3B,mBAAO,KAAC,KAAD,IAAP,CACD,CACD,mBAAO,KAAC,SAAD,IAAP,CACD,CAXD,CAaA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,QAAUH,CAAAA,cAAc,CAACG,IAAD,CAAxB,EAAzB,CAEA,mBACE,oCAEE,KAAC,OAAD,EAAS,WAAW,CAAEJ,WAAtB,CAAmC,gBAAgB,CAAEG,gBAArD,EAFF,CAIGD,UAAU,EAJb,GADF,CAQD","sourcesContent":["import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Dashboard from './pages/Dashboard';\nimport Plans from './pages/Plans';\nimport Community from './pages/Community';\nimport Journal from './pages/Journal';\n\nexport default function MainDisplay() {\n  const [currentPage, setCurrentPage] = useState('Dashboard');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Dashboard') {\n      return <Dashboard />;\n    }\n    if (currentPage === 'Journal') {\n      return <Journal />;\n    }\n    if (currentPage === 'Plans') {\n      return <Plans/>;\n    }\n    return <Community />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}