{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eldan\\\\Assignments\\\\Homework\\\\Scratch_Work\\\\pracPro\\\\src\\\\components\\\\pages\\\\Community.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Community() {\n  _s();\n\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'name') {\n      setName(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault(); // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n    setName('');\n    setMessage('');\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If you have any questions or just want to connect, you can fill this form or use the links down below! Thank you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        className: \"form-input w-100\",\n        name: \"name\",\n        onChange: handleInputChange,\n        type: \"text\",\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        className: \"form-input w-100\",\n        name: \"email\",\n        onChange: handleInputChange,\n        type: \"email\",\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        className: \"form-input w-100\",\n        name: \"message\",\n        onChange: handleInputChange,\n        type: \"message\",\n        placeholder: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block py-3\",\n        type: \"button\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Community, \"bU6RkskOt7Up89GqlVAWpEK/p18=\");\n\n_c = Community;\n\nvar _c;\n\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Homework/Scratch_Work/pracPro/src/components/pages/Community.js"],"names":["React","useState","Community","email","setEmail","name","setName","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","inputValue","value","handleFormSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaD,CAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACR,IAAzB;AACA,UAAMU,UAAU,GAAGF,MAAM,CAACG,KAA1B,CAJ+B,CAM/B;;AACA,QAAIF,SAAS,KAAK,OAAlB,EAA2B;AACzBV,MAAAA,QAAQ,CAACW,UAAD,CAAR;AACD,KAFD,MAEO,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC/BR,MAAAA,OAAO,CAACS,UAAD,CAAP;AACD,KAFM,MAEA;AACLP,MAAAA,UAAU,CAACO,UAAD,CAAV;AACD;AACF,GAdD;;AAgBA,QAAME,gBAAgB,GAAIL,CAAD,IAAO;AAC9B;AACAA,IAAAA,CAAC,CAACM,cAAF,GAF8B,CAG9B;;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,+DAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEC,IADT;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEM,iBAJZ;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,KAAK,EAAER,KADT;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,QAAQ,EAAEQ,iBAJZ;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,QAAA,KAAK,EAAEJ,OADT;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,QAAQ,EAAEI,iBAJZ;AAKE,QAAA,IAAI,EAAC,SALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAiE,QAAA,OAAO,EAAEM,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EA6BGR,YAAY,iBACX;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAtEuBP,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function Community() {\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'name') {\n      setName(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setName('');\n    setMessage('');\n    setEmail('');\n  };\n\n  return (\n    <div>\n      <p>If you have any questions or just want to connect, you can fill this form or use the links down below! Thank you!</p>\n      <form className=\"flex-row justify-center justify-space-between-md align-center\">\n        <input\n          value={name}\n          className=\"form-input w-100\"\n          name=\"name\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"name\"\n        />\n        <input\n          value={email}\n          className=\"form-input w-100\"\n          name=\"email\"\n          onChange={handleInputChange}\n          type=\"email\"\n          placeholder=\"email\"\n        />\n        <input\n          value={message}\n          className=\"form-input w-100\"\n          name=\"message\"\n          onChange={handleInputChange}\n          type=\"message\"\n          placeholder=\"message\"\n        />\n        <button className=\"btn btn-primary btn-block py-3\" type=\"button\" onClick={handleFormSubmit}>Submit</button>\n      </form>\n      {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}