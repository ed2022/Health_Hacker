{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eldan\\\\Assignments\\\\Homework\\\\Scratch_Work\\\\pracPro\\\\src\\\\components\\\\NavTabs.js\";\nimport React from 'react'; // Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#Dashboard\",\n        onClick: () => handlePageChange('Dashboard') // Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Dashboard' ? 'nav-link active' : 'nav-link',\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#portfolio\",\n        onClick: () => handlePageChange('Portfolio') // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link',\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#resume\",\n        onClick: () => handlePageChange('Resume') // This is a conditional (ternary) operator that checks to see if the current page is \"Resume\"\n        // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n        ,\n        className: currentPage === 'Resume' ? 'nav-link active' : 'nav-link',\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        onClick: () => handlePageChange('Contact') // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavTabs;\nexport default NavTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Homework/Scratch_Work/pracPro/src/components/NavTabs.js"],"names":["React","NavTabs","currentPage","handlePageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AACA,SAASC,OAAT,OAAoD;AAAA,MAAnC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAmC;AAClD,sBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,WAAD,CAFjC,CAGE;AAHF;AAIE,QAAA,SAAS,EAAED,WAAW,KAAK,WAAhB,GAA8B,iBAA9B,GAAkD,UAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,WAAD,CAFjC,CAGE;AAHF;AAIE,QAAA,SAAS,EAAED,WAAW,KAAK,WAAhB,GAA8B,iBAA9B,GAAkD,UAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CAFjC,CAGE;AACA;AAJF;AAKE,QAAA,SAAS,EAAED,WAAW,KAAK,QAAhB,GAA2B,iBAA3B,GAA+C,UAL5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF,eAgCE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CAFjC,CAGE;AAHF;AAIE,QAAA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;KA9CQD,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#Dashboard\"\n          onClick={() => handlePageChange('Dashboard')}\n          // Check to see if the currentPage is `Dashboard`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Dashboard' ? 'nav-link active' : 'nav-link'}\n        >\n          Dashboard\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => handlePageChange('Portfolio')}\n          // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#resume\"\n          onClick={() => handlePageChange('Resume')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Resume\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\n        >\n          Resume\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n"]},"metadata":{},"sourceType":"module"}