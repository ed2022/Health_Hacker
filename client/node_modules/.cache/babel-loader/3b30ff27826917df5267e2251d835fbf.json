{"ast":null,"code":"import _slicedToArray from\"C:/Users/eldan/Assignments/Projects/Project_3/OG/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Community(){// Create state variables for the fields in the form\n// We are also setting their initial values to an empty string\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];var handleInputChange=function handleInputChange(e){// Getting the value and name of the input which triggered the change\nvar target=e.target;var inputType=target.name;var inputValue=target.value;// Based on the input type, we set the state of either email, username, and password\nif(inputType==='message'){setMessage(inputValue);}};var handleFormSubmit=function handleFormSubmit(e){// Preventing the default behavior of the form submit (which is to refresh the page)\ne.preventDefault();// If everything goes according to plan, we want to clear out the input after a successful registration.\nsetMessage('');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Respond to Gena and her Journy\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"flex-row justify-center justify-space-between-md align-center\",children:[/*#__PURE__*/_jsx(\"input\",{value:message,className:\"form-input w-100\",name:\"message\",onChange:handleInputChange,type:\"message\",placeholder:\"message\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-block py-3\",type:\"button\",onClick:handleFormSubmit,children:\"Submit\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errorMessage})})]});}","map":{"version":3,"sources":["C:/Users/eldan/Assignments/Projects/Project_3/OG/client/src/components/pages/Community.js"],"names":["React","useState","Community","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAGA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC;AACA;AACA,cAA8BD,QAAQ,CAAC,EAAD,CAAtC,wCAAOE,OAAP,eAAgBC,UAAhB,eACA,eAAwCH,QAAQ,CAAC,EAAD,CAAhD,yCAAOI,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B;AACA,GAAQC,CAAAA,MAAR,CAAmBD,CAAnB,CAAQC,MAAR,CACA,GAAMC,CAAAA,SAAS,CAAGD,MAAM,CAACE,IAAzB,CACA,GAAMC,CAAAA,UAAU,CAAGH,MAAM,CAACI,KAA1B,CAEA;AACA,GAAIH,SAAS,GAAK,SAAlB,CAA6B,CAC3BN,UAAU,CAACQ,UAAD,CAAV,CACD,CACF,CAVD,CAYA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACN,CAAD,CAAO,CAC9B;AACAA,CAAC,CAACO,cAAF,GACA;AACAX,UAAU,CAAC,EAAD,CAAV,CACD,CALD,CAOA,mBACE,oCACE,qDADF,cAEE,cAAM,SAAS,CAAC,+DAAhB,wBACE,cACE,KAAK,CAAED,OADT,CAEE,SAAS,CAAC,kBAFZ,CAGE,IAAI,CAAC,SAHP,CAIE,QAAQ,CAAEI,iBAJZ,CAKE,IAAI,CAAC,SALP,CAME,WAAW,CAAC,SANd,EADF,cASE,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,IAAI,CAAC,QAAxD,CAAiE,OAAO,CAAEO,gBAA1E,oBATF,GAFF,CAaGT,YAAY,eACX,kCACE,UAAG,SAAS,CAAC,YAAb,UAA2BA,YAA3B,EADF,EAdJ,GADF,CAqBD","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function Community() {\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'message') {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <p>Respond to Gena and her Journy</p>\n      <form className=\"flex-row justify-center justify-space-between-md align-center\">\n        <input\n          value={message}\n          className=\"form-input w-100\"\n          name=\"message\"\n          onChange={handleInputChange}\n          type=\"message\"\n          placeholder=\"message\"\n        />\n        <button className=\"btn btn-primary btn-block py-3\" type=\"button\" onClick={handleFormSubmit}>Submit</button>\n      </form>\n      {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}